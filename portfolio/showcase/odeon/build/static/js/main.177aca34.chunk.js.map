{"version":3,"sources":["util/libraries/axios.js","util/services/getWeather.js","util/helpers/token.js","components/search.js","components/weather.js","components/App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","interceptors","response","use","data","error","indexOf","status","console","log","message","Promise","reject","alert","localStorage","clear","defaults","headers","common","window","location","reload","getWeather","queryParams","a","get","Search","props","state","this","searchInput","focus","className","type","name","placeholder","ref","e","onChange","onInputChange","style","float","onClick","submitSearch","React","Component","temperatures","hours","timeZoneDiffs","Weather","event","setState","target","value","isValid","isSuccessfulParam","Data","forEach","element","userInput","then","result","tempArr","successfullySearchedCities","push","timeZone","city","timezone","jsonData","list","responseObj","addRow","calculateTimeZoneDiff","length","temperatureData","filter","index","hourData","main","temp","dt_txt","handleReset","isSuccessfulSearch","getDate","hour","transformedHour","slice","transformedHourStr","toString","counter","weatherDetailsTableRow","map","scope","dangerouslySetInnerHTML","__html","timeDetailsTableRow","moment","format","borderTop","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.177aca34.chunk.js","sourcesContent":["import axios from 'axios';\n// import { API_TOKEN } from '../helpers/token';\n\nconst instance = axios.create({\n    baseURL: 'http://api.openweathermap.org/data/2.5/'\n  });\n\n/* axios.defaults.headers.common = {\n  'Authorization': `Bearer ${API_TOKEN}`\n}; */\n\ninstance.interceptors.response.use(function (response) {\n    return response.data;\n  }, function (error) {\n    if ([401, 403].indexOf(error.response.status) !== -1) {\n      // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n      alert(error.message);\n      localStorage.clear();\n      delete axios.defaults.headers.common[\"Authorization\"];\n      window.location.reload();\n    } else {\n      console.log('Error', error.message);\n      return Promise.reject(error);\n    }\n  });\n\nexport default instance;","import axios from \"../libraries/axios\";\nimport { API_TOKEN } from '../helpers/token';\n\nexport const getWeather = async (queryParams) => {\n    const response = await axios.get(`forecast?${queryParams}&appid=${API_TOKEN}`)\n        if (response)\n            return response;    \n}","export const API_TOKEN = 'e466585b370137641d65eea61a87df93';","import React from 'react';\n\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.searchInput.focus();\n  }\n/*\n  Intentionally not adapted to hooks since function as props showcase, but the way it works explained below;\n\n  import { useEffect, useRef } from \"react\";\n  const searchInput = useRef(null);\n  useEffect(()=>{\n     searchInput.current.focus();\n  },[])\n\n  And lastly, 'ref={searchInput}' attribute should add to the input tag.\n*/\n  render() {\n    return (\n      <>\n        <div className=\"offset-2 col-8 my-5\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <input type=\"text\" className=\"form-control\" name=\"userInput\" placeholder=\"City\" ref={e => (this.searchInput = e)} onChange={e => this.props.onInputChange(e)}/>\n            </div>\n            <div className=\"col-4\">\n              <button type=\"button\" className=\"btn btn-primary btn-block\" style={{ float: 'right' }} onClick={this.props.submitSearch}>Search</button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import React from 'react';\nimport { getWeather } from '../util/services/getWeather';\nimport Data from '../util/helpers/city.list.json';\nimport moment from 'moment';\nimport Search from './search';\n\nconst temperatures = [], hours = [], timeZoneDiffs = [];\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        responseObj: {},\n        jsonData: [],\n        userInput: '',\n        isSuccessfulSearch: false,\n        successfullySearchedCities: []\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n    });\n  }\n\n  isValid = () => { // Feature: To put inline as an attribute of search button, copy-pastable as follows 'disabled={this.props.isValid()}'\n    let isSuccessfulParam = true;\n    Data.forEach(element => { // city.list.json on util folder used in order to success validation on the user input value of city\n      if (element.name  === this.state.userInput) {\n        isSuccessfulParam = false;\n      }\n    });\n    return isSuccessfulParam;\n  }\n\n  submitSearch = async() => {\n    if (!this.isValid()) {\n      await getWeather(`q=${this.state.userInput}&units=metric`)\n        .then (result => {\n          let tempArr = this.state.successfullySearchedCities;\n          tempArr.push(this.state.userInput);\n          this.setState({\n            successfullySearchedCities: tempArr,\n            timeZone: result.city.timezone / 3600,\n            jsonData: result.list,\n            responseObj: result\n          }, () => this.addRow());\n        });\n    } else\n        alert(\"Lütfen doğru bir şehir adı girdiğinizden emin olun.\");\n  }\n\n  addRow = () => {\n    this.calculateTimeZoneDiff(this.state.successfullySearchedCities.length);\n\n    const temperatureData = this.state.jsonData.filter((element, index) => index < 8);\n    const hourData = this.state.jsonData.filter((element, index) => index < 8);\n\n    temperatureData.forEach((element, index) => {\n      temperatures.push(element.main.temp);\n    });\n    hourData.forEach(element => {\n      hours.push(element.dt_txt);\n    });\n    this.handleReset();\n  }\n\n  handleReset = () => { // put unnecessarily to being able to render ui and clear after user input besides returning successful log msg for interviewer\n    this.setState({\n      isSuccessfulSearch: false\n    }, () => console.log(\"Successfully completed search!..\"));\n  }\n\n  getDate = (hour) => { // moment.js makes hour info ending with '01' instead of '00' so considered changing statically instead of dynamic 'hour.slice(-3)'\n    let transformedHour = hour.slice(0, -3);\n    let transformedHourStr = '';\n    if (transformedHour > 12) {\n      hour.slice(0, 2, toString(transformedHour));\n      transformedHourStr = '0' + (transformedHour - 12) + ':00 PM';\n    } else if (transformedHour === 12) {\n      transformedHourStr = transformedHour + ':00 PM';\n    } else if (transformedHour == 0) {\n      transformedHourStr = 12 + ':00 PM';\n    } else\n      transformedHourStr = transformedHour + ':00 AM';\n    return transformedHourStr;\n  }\n\n  calculateTimeZoneDiff = (counter) => { // not developed further since incoming API call returns local times applied already\n    timeZoneDiffs.push(this.state.timeZone);\n  }\n\n  render() {    \n    const weatherDetailsTableRow =\n      this.state.successfullySearchedCities.map((city, index) => {\n        return (\n          <tr key={index}>\n            <th scope=\"row\">{this.state.successfullySearchedCities[index] ? city + ' Province' : ''}</th>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 0] ? temperatures[index * 8 + 0] + ' &deg;' : ''}}></td> {/* Used for demanded showcase */}\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 1] ? temperatures[index * 8 + 1] + ' &#8451;' : ''}}></td>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 2] ? temperatures[index * 8 + 2] + ' &#8451;' : ''}}></td>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 3] ? temperatures[index * 8 + 3] + ' &#8451;' : ''}}></td>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 4] ? temperatures[index * 8 + 4] + ' &#8451;' : ''}}></td>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 5] ? temperatures[index * 8 + 5] + ' &#8451;' : ''}}></td>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 6] ? temperatures[index * 8 + 6] + ' &#8451;' : ''}}></td>\n            <td dangerouslySetInnerHTML = {{__html: temperatures[index * 8 + 7] ? temperatures[index * 8 + 7] + ' &#8451;' : ''}}></td>\n          </tr>\n        )\n      });\n\n    const timeDetailsTableRow = \n      <>\n        <th scope=\"col\">{ hours[0] ? this.getDate(moment(hours[0]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[1] ? this.getDate(moment(hours[1]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[2] ? this.getDate(moment(hours[2]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[3] ? this.getDate(moment(hours[3]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[4] ? this.getDate(moment(hours[4]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[5] ? this.getDate(moment(hours[5]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[6] ? this.getDate(moment(hours[6]).format('HH:MM')) : '' }</th>\n        <th scope=\"col\">{ hours[7] ? this.getDate(moment(hours[7]).format('HH:MM')) : '' }</th>\n      </>;\n\n    return (\n      <>\n        <nav className=\"navbar navbar-light bg-light\" style={{ borderTop: '2px solid #000'}}>\n          <span className=\"navbar-brand mb-0 h1\">Odeon Weather</span>\n        </nav>\n        <Search\n          onInputChange={this.onInputChange}\n          isValid={this.isValid}\n          submitSearch={this.submitSearch}\n        />\n        <div className=\"offset-2 col-8 my-5\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <table className=\"table\">\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th scope=\"col\">City</th>\n                    { timeDetailsTableRow }\n                  </tr>\n                </thead>\n                <tbody>\n                    { weatherDetailsTableRow }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}","import Weather from './weather';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../css/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}